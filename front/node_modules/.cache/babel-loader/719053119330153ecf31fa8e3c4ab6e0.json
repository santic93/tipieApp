{"ast":null,"code":"var _jsxFileName = \"/Users/santiagocastro/Documents/Programacion/tipie/tipie/front/src/Components/Data.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [empleados, setEmpleados] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [sector, setSector] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"/prueba\").then(res => {\n      const data = res.data;\n      setEmpleados(data);\n    }).catch(err => console.log(err));\n  }, []);\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90\n  }, {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\n  }];\n  empleados.map(empleado => (setName(empleado.name), setAge(empleado.age), setSector(empleado.sector), setEmail(empleado.email)));\n  const rows = [{\n    id: 1,\n    lastName: name,\n    firstName: 'Jon',\n    age: 35\n  }, {\n    id: 2,\n    lastName: 'Lannister',\n    firstName: 'Cersei',\n    age: 42\n  }, {\n    id: 3,\n    lastName: 'Lannister',\n    firstName: 'Jaime',\n    age: 45\n  }, {\n    id: 4,\n    lastName: 'Stark',\n    firstName: 'Arya',\n    age: 16\n  }, {\n    id: 5,\n    lastName: 'Targaryen',\n    firstName: 'Daenerys',\n    age: null\n  }, {\n    id: 6,\n    lastName: 'Melisandre',\n    firstName: null,\n    age: 150\n  }, {\n    id: 7,\n    lastName: 'Clifford',\n    firstName: 'Ferrara',\n    age: 44\n  }, {\n    id: 8,\n    lastName: 'Frances',\n    firstName: 'Rossini',\n    age: 36\n  }, {\n    id: 9,\n    lastName: 'Roxie',\n    firstName: 'Harvey',\n    age: 65\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this) // <div className=\"main-containe\">\n  //   <table>\n  //     {empleados.map((empleado) => (\n  //       <div>\n  //        <thead>\n  //        <tr>\n  //          <th>Nombre de empleado</th>\n  //          <th>Sector</th>\n  //          <th>Edad</th>\n  //          <th>Email</th>\n  //          </tr>\n  //          </thead>\n  //          <tr>\n  //          <td> {empleado.name}</td>\n  //          <td>{empleado.sector}</td>\n  //          <td>{empleado.age}</td>\n  //          <td>{empleado.email}</td>\n  //          </tr>\n  //      </div>\n  //     ))}\n  //   </table>\n  // </div>\n  ;\n};\n\n_s(Home, \"ZMFvJ9lMYb8tr1SRMW1oG+yYjQ0=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/santiagocastro/Documents/Programacion/tipie/tipie/front/src/Components/Data.jsx"],"names":["React","useEffect","useState","axios","DataGrid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Home","empleados","setEmpleados","name","setName","age","setAge","sector","setSector","email","setEmail","get","then","res","data","catch","err","console","log","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue","id","map","empleado","rows","lastName","firstName","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFoB,GADH,CACO,SADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAZ,MAAAA,YAAY,CAACY,IAAD,CAAZ;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOD,GARQ,EAQN,EARM,CAAT;AASA,QAAMG,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GADc,EAEd;AAAEF,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,UAAU,EAAE,YAAlC;AAAgDC,IAAAA,KAAK,EAAE;AAAvD,GAFc,EAGd;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,UAAU,EAAE,WAAjC;AAA8CC,IAAAA,KAAK,EAAE;AAArD,GAHc,EAId;AACEF,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEE,IAAAA,IAAI,EAAE,QAHR;AAIED,IAAAA,KAAK,EAAE;AAJT,GAJc,EAUd;AACEF,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,UAAU,EAAE,WAFd;AAGEG,IAAAA,WAAW,EAAE,qDAHf;AAIEC,IAAAA,QAAQ,EAAE,KAJZ;AAKEH,IAAAA,KAAK,EAAE,GALT;AAMEI,IAAAA,WAAW,EAAGC,MAAD,IACV,GAAEA,MAAM,CAACC,QAAP,CAAgBD,MAAM,CAACE,EAAvB,EAA2B,WAA3B,KAA2C,EAAG,IAC/CF,MAAM,CAACC,QAAP,CAAgBD,MAAM,CAACE,EAAvB,EAA2B,UAA3B,KAA0C,EAC3C;AATL,GAVc,CAAhB;AAuBA5B,EAAAA,SAAS,CAAC6B,GAAV,CAAeC,QAAD,KACP3B,OAAO,CAAC2B,QAAQ,CAAC5B,IAAV,CAAP,EACAG,MAAM,CAACyB,QAAQ,CAAC1B,GAAV,CADN,EAEAG,SAAS,CAACuB,QAAQ,CAACxB,MAAV,CAFT,EAGAG,QAAQ,CAACqB,QAAQ,CAACtB,KAAV,CAJD,CAAd;AAQA,QAAMuB,IAAI,GAAG,CACX;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE9B,IAAnB;AAAyB+B,IAAAA,SAAS,EAAE,KAApC;AAA2C7B,IAAAA,GAAG,EAAE;AAAhD,GADW,EAEX;AAAEwB,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE,WAAnB;AAAgCC,IAAAA,SAAS,EAAE,QAA3C;AAAqD7B,IAAAA,GAAG,EAAE;AAA1D,GAFW,EAGX;AAAEwB,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE,WAAnB;AAAgCC,IAAAA,SAAS,EAAE,OAA3C;AAAoD7B,IAAAA,GAAG,EAAE;AAAzD,GAHW,EAIX;AAAEwB,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE,OAAnB;AAA4BC,IAAAA,SAAS,EAAE,MAAvC;AAA+C7B,IAAAA,GAAG,EAAE;AAApD,GAJW,EAKX;AAAEwB,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE,WAAnB;AAAgCC,IAAAA,SAAS,EAAE,UAA3C;AAAuD7B,IAAAA,GAAG,EAAE;AAA5D,GALW,EAMX;AAAEwB,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE,YAAnB;AAAiCC,IAAAA,SAAS,EAAE,IAA5C;AAAkD7B,IAAAA,GAAG,EAAE;AAAvD,GANW,EAOX;AAAEwB,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE,UAAnB;AAA+BC,IAAAA,SAAS,EAAE,SAA1C;AAAqD7B,IAAAA,GAAG,EAAE;AAA1D,GAPW,EAQX;AAAEwB,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE,SAAnB;AAA8BC,IAAAA,SAAS,EAAE,SAAzC;AAAoD7B,IAAAA,GAAG,EAAE;AAAzD,GARW,EASX;AAAEwB,IAAAA,EAAE,EAAE,CAAN;AAASI,IAAAA,QAAQ,EAAE,OAAnB;AAA4BC,IAAAA,SAAS,EAAE,QAAvC;AAAiD7B,IAAAA,GAAG,EAAE;AAAtD,GATW,CAAb;AAYA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAE8B,MAAAA,MAAM,EAAE,GAAV;AAAeb,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACA,QAAC,QAAD;AACF,MAAA,IAAI,EAAEU,IADJ;AAEF,MAAA,OAAO,EAAEb,OAFP;AAGF,MAAA,QAAQ,EAAE,CAHR;AAIF,MAAA,kBAAkB,EAAE,CAAC,CAAD,CAJlB;AAKF,MAAA,iBAAiB;AALf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF,CAYE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAnCF;AAqCD,CAhGD;;GAAMnB,I;;KAAAA,I;AAkGN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nconst Home = () => {\n  const [empleados, setEmpleados] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [sector, setSector] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"/prueba\")\n      .then((res) => {\n        const data = res.data;\n        setEmpleados(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'firstName', headerName: 'First name', width: 130 },\n    { field: 'lastName', headerName: 'Last name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.getValue(params.id, 'firstName') || ''} ${\n          params.getValue(params.id, 'lastName') || ''\n        }`,\n    },\n  ];\n\n  empleados.map((empleado)=>(\n         setName(empleado.name),\n         setAge(empleado.age),\n         setSector(empleado.sector),\n         setEmail(empleado.email)\n         )\n  )\n  \n  const rows = [\n    { id: 1, lastName: name, firstName: 'Jon', age: 35 },\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  ];\n  \n  return (\n    <div style={{ height: 400, width: '100%' }}>\n    <DataGrid\n  rows={rows}\n  columns={columns}\n  pageSize={5}\n  rowsPerPageOptions={[5]}\n  checkboxSelection\n/>\n</div>\n    \n\n    // <div className=\"main-containe\">\n    //   <table>\n    //     {empleados.map((empleado) => (\n    //       <div>\n    //        <thead>\n    //        <tr>\n    //          <th>Nombre de empleado</th>\n    //          <th>Sector</th>\n    //          <th>Edad</th>\n    //          <th>Email</th>\n    //          </tr>\n    //          </thead>\n\n    //          <tr>\n    //          <td> {empleado.name}</td>\n    //          <td>{empleado.sector}</td>\n    //          <td>{empleado.age}</td>\n    //          <td>{empleado.email}</td>\n    //          </tr>\n\n    //      </div>\n    //     ))}\n    //   </table>\n    // </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}